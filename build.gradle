apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 9
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
group='com.alexandershtanko.reactivepaper'

ext {
    bintrayRepo = 'reactive-paper'
    bintrayName = 'reactive-paper'   // Has to be same as your library module name

    publishedGroupId = 'com.alexandershtanko.reactivepaper'
    libraryName = 'Reactive Paper'
    artifact = 'reactive-paper'     // Has to be same as your library module name

    libraryDescription = 'RxJava Wrapper for Paper'
    // Your github repo link
    siteUrl = 'https://github.com/AlexanderShtanko/reactive-paper'
    gitUrl = 'https://github.com/AlexanderShtanko/reactive-paper.git'
    githubRepository= 'AlexanderShtanko/reactive-paper'

    libraryVersion = '1.0.0'

    developerId = 'alexandershtanko'
    developerName = 'Alexander Shtanko'
    developerEmail = 'alexjcomp@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


apply from: 'https://raw.githubusercontent.com/nisrulz/JCenter/master/installv1.gradle'


apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        version {
            name = libraryVersion
            desc = libraryDescription

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'io.reactivex:rxjava:1.0.15'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.github.pilgr:Paper:1.5'
}
